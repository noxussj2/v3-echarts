{
    // Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    "noxussj v-for": {
        "prefix": "v-for",
        "body": ["v-for=\"(item, index) in $1\" :key=\"index\""],
        "description": "noxussj v-for"
    },
    "noxussj template": {
        "prefix": "template",
        "body": [
            "<template>",
            "    <div class=\"$1\"></div>",
            "</template>",
        ],
        "description": "noxussj template"
    },
    "noxussj scss": {
        "prefix": "scss",
        "body": [
            "<style lang=\"scss\" scoped>",
            "$1",
            "</style>",
        ],
        "description": "noxussj scss"
    },
    "noxussj script-ts-setup": {
        "prefix": "script-ts-setup",
        "body": [
            "<script lang=\"ts\" setup>",
            "$1",
            "</script>",
        ],
        "description": "noxussj script-ts-setup"
    },
    "noxussj props": {
        "prefix": "props",
        "body": [
            "import { PropType } from 'vue'",
            "",
            "const props = defineProps({",
            "    data: {",
            "        type: String,",
            "        default: ''",
            "    }",
            "})",
        ],
        "description": "noxussj props"
    },
    "noxussj propsType": {
        "prefix": "propsType",
        "body": [
            "import { PropType } from 'vue'",
            "",
            "interface Data {",
            "    name: string",
            "    value: string",
            "}",
            "",
            "const props = defineProps({",
            "    data: {",
            "        type: Array as PropType<Data[]>,",
            "        default: () => []",
            "    }",
            "})",
        ],
        "description": "noxussj propsType"
    },
    "noxussj emits": {
        "prefix": "emits",
        "body": [
            "import { computed } from 'vue'",
            "",
            "interface EmitsType {",
            "    (e: 'update:modelValue', value: String): void",
            "}",
            "",
            "const emit = defineEmits<EmitsType>()",
            "",
            "const value = computed({",
            "    get: () => props.modelValue,",
            "    set: (val) => {",
            "        emit('update:modelValue', val)",
            "    }",
            "})",

        ],
        "description": "noxussj emits"
    }
}
